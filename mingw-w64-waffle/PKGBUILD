# Maintainer: Chad Versace <chad.versace@linux.intel.com>

_pkgbasename='waffle'
pkgname='mingw-w64-waffle'
pkgver='1.5.1'
pkgrel=1
pkgdesc='a library for choosing window system and OpenGL API at runtime (mingw-w64)'
arch=('any')
url='http://www.waffle-gl.org'
license=('BSD')

depends=('mingw-w64-crt>=3.1.0-3')
makedepends=('mingw-w64-cmake')

options=('!strip' '!buildflags' 'staticlibs')
_architectures="i686-w64-mingw32 x86_64-w64-mingw32"

source=("https://github.com/waffle-gl/waffle/archive/v$pkgver.tar.gz")
sha256sums=('1cc8e63b47bc2273eeab3d82bc804953adae70beceb59839612ecedc4ea3cd59')

build() {
	unset LDFLAGS
	cd "$srcdir"

	msg "Building mingw-w64-waffle for cross-building"
	for _arch in ${_architectures}; do
		mkdir -p build-${_arch} && pushd build-${_arch}
		${_arch}-cmake "../${_pkgbasename}-$pkgver" \
			-DCMAKE_INSTALL_PREFIX=/usr/${_arch} \
			-DCMAKE_INSTALL_LIBDIR=/usr/${_arch}/lib \
			-DCMAKE_BUILD_TYPE=Release \
			-Dwaffle_build_tests=0 \
			-Dwaffle_build_manpages=0 \
			-Dwaffle_build_htmldocs=0 \
			-Dwaffle_build_examples=1

		make
		popd
	done

	# There should be a better way to do this
	msg "Building mingw-w64-waffle for native builds"
	for _arch in ${_architectures}; do
		mkdir -p "build-${_arch}-win" && pushd "build-${_arch}-win"
		${_arch}-cmake "../${_pkgbasename}-$pkgver" \
			-DCMAKE_INSTALL_PREFIX="/" \
			-DCMAKE_INSTALL_LIBDIR="lib" \
			-DCMAKE_BUILD_TYPE=Release \
			-Dwaffle_build_tests=0 \
			-Dwaffle_build_manpages=0 \
			-Dwaffle_build_htmldocs=0 \
			-Dwaffle_build_examples=1

		make
		popd
	done
}

package() {
	for _arch in ${_architectures}; do
		cd "$srcdir/build-${_arch}"

		make DESTDIR="${pkgdir}" install
#		${_arch}-strip --strip-unneeded "$pkgdir"/usr/${_arch}/bin/*.dll
#		${_arch}-strip -g "$pkgdir"/usr/${_arch}/lib/*.a
	done

	for _arch in ${_architectures}; do
		cd "$srcdir/build-${_arch}-win"

		# Create Windows zip archives
		make package
	done
}
